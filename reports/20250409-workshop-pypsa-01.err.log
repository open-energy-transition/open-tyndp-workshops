Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
n1.optimize(solver_name="highs")
------------------


[31m---------------------------------------------------------------------------[39m
[31mKeyError[39m                                  Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[80][39m[32m, line 1[39m
[32m----> [39m[32m1[39m [43mn1[49m[43m.[49m[43moptimize[49m[43m([49m[43msolver_name[49m[43m=[49m[33;43m"[39;49m[33;43mhighs[39;49m[33;43m"[39;49m[43m)[49m

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/pypsa/optimization/optimize.py:633[39m, in [36mOptimizationAccessor.__call__[39m[34m(self, *args, **kwargs)[39m
[32m    631[39m [38;5;129m@wraps[39m(optimize)
[32m    632[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m__call__[39m([38;5;28mself[39m, *args: Any, **kwargs: Any) -> Any:
[32m--> [39m[32m633[39m     [38;5;28;01mreturn[39;00m [43moptimize[49m[43m([49m[38;5;28;43mself[39;49m[43m.[49m[43mn[49m[43m,[49m[43m [49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/pypsa/optimization/optimize.py:593[39m, in [36moptimize[39m[34m(n, snapshots, multi_investment_periods, transmission_losses, linearized_unit_commitment, model_kwargs, extra_functionality, assign_all_duals, solver_name, solver_options, compute_infeasibilities, **kwargs)[39m
[32m    590[39m n._multi_invest = [38;5;28mint[39m(multi_investment_periods)
[32m    591[39m n._linearized_uc = linearized_unit_commitment
[32m--> [39m[32m593[39m [43mn[49m[43m.[49m[43mconsistency_check[49m[43m([49m[43mstrict[49m[43m=[49m[43m[[49m[33;43m"[39;49m[33;43munknown_buses[39;49m[33;43m"[39;49m[43m][49m[43m)[49m
[32m    594[39m m = create_model(
[32m    595[39m     n,
[32m    596[39m     sns,
[32m   (...)[39m[32m    601[39m     **model_kwargs,
[32m    602[39m )
[32m    603[39m [38;5;28;01mif[39;00m extra_functionality:

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/pypsa/consistency.py:859[39m, in [36mconsistency_check[39m[34m(n, check_dtypes, strict)[39m
[32m    857[39m check_for_unknown_buses(n, c, [33m"[39m[33munknown_buses[39m[33m"[39m [38;5;129;01min[39;00m strict)
[32m    858[39m check_for_unknown_carriers(n, c, [33m"[39m[33munkown_carriers[39m[33m"[39m [38;5;129;01min[39;00m strict)
[32m--> [39m[32m859[39m [43mcheck_time_series[49m[43m([49m[43mn[49m[43m,[49m[43m [49m[43mc[49m[43m,[49m[43m [49m[33;43m"[39;49m[33;43mtime_series[39;49m[33;43m"[39;49m[43m [49m[38;5;129;43;01min[39;49;00m[43m [49m[43mstrict[49m[43m)[49m
[32m    860[39m check_static_power_attributes(n, c, [33m"[39m[33mstatic_power_attrs[39m[33m"[39m [38;5;129;01min[39;00m strict)
[32m    861[39m check_time_series_power_attributes(n, c, [33m"[39m[33mtime_series_power_attrs[39m[33m"[39m [38;5;129;01min[39;00m strict)

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/pypsa/common.py:238[39m, in [36mdeprecated_kwargs.<locals>.deco.<locals>.wrapper[39m[34m(*args, **kwargs)[39m
[32m    235[39m [38;5;129m@functools[39m.wraps(f)
[32m    236[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mwrapper[39m(*args: Any, **kwargs: Any) -> Any:
[32m    237[39m     rename_kwargs(f.[34m__name__[39m, kwargs, aliases)
[32m--> [39m[32m238[39m     [38;5;28;01mreturn[39;00m [43mf[49m[43m([49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/pypsa/consistency.py:254[39m, in [36mcheck_time_series[39m[34m(n, component, strict)[39m
[32m    231[39m [38;5;250m[39m[33;03m"""[39;00m
[32m    232[39m [33;03mCheck if time series of component are aligned with network snapshots.[39;00m
[32m    233[39m 
[32m   (...)[39m[32m    251[39m 
[32m    252[39m [33;03m"""[39;00m
[32m    253[39m [38;5;28;01mfor[39;00m attr [38;5;129;01min[39;00m component.attrs.index[component.attrs.varying & component.attrs.static]:
[32m--> [39m[32m254[39m     attr_df = [43mcomponent[49m[43m.[49m[43mdynamic[49m[43m[[49m[43mattr[49m[43m][49m
[32m    256[39m     diff = attr_df.columns.difference(component.static.index)
[32m    257[39m     [38;5;28;01mif[39;00m [38;5;28mlen[39m(diff):

[31mKeyError[39m: 'efficiency4'

